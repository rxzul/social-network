{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","postsBlock","posts","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","className","classes","src","photos","large","alt","ProfileInfo_ProfileStatusWithHooks","aboutMe","contacts","vk","Preloader","Post","message","likeCount","MyPosts","React","memo","map","post","MyPosts_Post_Post","key","id","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","type","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.72c2cfd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2ZJh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ER8-\",\"posts\":\"MyPosts_posts__1Kmyn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__13vUa\"};","import React,  {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n                <h4>{profile.aboutMe}</h4>\r\n                <p>\r\n                    <b>Профиль vk: </b> {profile.contacts.vk}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src=\"https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likeCount} likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let posts = props.posts.map(post => <Post message={post.message} likeCount={post.likeCount} key={post.id}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 =  maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} placeholder={\"Post message\"} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: \"addNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}