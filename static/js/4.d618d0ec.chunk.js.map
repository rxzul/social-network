{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","dialog","active","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","classes","react_router_dom","to","name","Message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogPage","map","Dialogs_DialogItem_DialogItem","key","Dialogs_Message_Message","isAuth","values","sendMessage","newMessageBody","react_router","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,0HCYHC,EATI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQZ,OAAS,IAAMY,IAAQX,QAC3CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAIR,GAAOD,EAAMU,QCCvBC,EANC,SAACX,GACb,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQT,SAAUE,EAAMF,mDC8B1Cc,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,CAfL,SAACf,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMY,SAAUjB,EAAMkB,cAClBf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBF,KAAK,iBAAiBc,YAAY,wBAE7CrB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCAQDoB,EA7CC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,WACdlC,EAAUiC,EAAMjC,QAAQmC,IAAI,SAAAjC,GAAM,OAAIQ,EAAAC,EAAAC,cAACwB,EAAD,CAAYnB,KAAMf,EAAOe,KAAMoB,IAAKnC,EAAOO,GAAIA,GAAIP,EAAOO,OAChGL,EAAW6B,EAAM7B,SAAS+B,IAAI,SAAA9B,GAAO,OAAIK,EAAAC,EAAAC,cAAC0B,EAAD,CAASjC,QAASA,EAAQA,QAAUgC,IAAKhC,EAAQI,OAM9F,OAAKF,EAAMgC,OAGP7B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQd,SACpBU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,cACnBD,GAELU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQV,UACpBM,EAAAC,EAAAC,cAAA,WAAMR,GACNM,EAAAC,EAAAC,cAACS,EAAD,CAAqBG,SAdjB,SAACgB,GACjBjC,EAAMkC,YAAYD,EAAOE,sBAGHhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAU3B,GAAG,4DCdvC4B,EAA6B,SAACX,GAAD,MAAY,CACzCM,OAAQN,EAAMY,KAAKN,gBCeRO,sBACXC,YAfkB,SAACd,GACnB,MAAO,CACHC,WAAYD,EAAMC,aAID,SAACc,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,QDPP,SAACQ,GAAc,IACtCC,EADsC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAd,IAAA,SAAAyB,MAAA,WAGpC,OAAKP,KAAKhD,MAAMgC,OAET7B,EAAAC,EAAAC,cAACsC,EAAcK,KAAKhD,OAFIG,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAU3B,GAAG,eAHRmC,EAAA,CACZY,IAAMb,WAUtC,OAFiCH,YAAQH,EAARG,CAAoCI,ICG1DL,CAGbd","file":"static/js/4.d618d0ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1L6-L\",\"dialogsItems\":\"Dialogs_dialogsItems__1kd5e\",\"dialog\":\"Dialogs_dialog__26m4w\",\"active\":\"Dialogs_active__lAh0D\",\"messages\":\"Dialogs_messages__3YHZr\",\"message\":\"Dialogs_message__2yvF_\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogPage;\r\n    let dialogs = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messages = state.messages.map(message => <Message message={message.message}  key={message.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.dialogs}>\r\n                <div className={classes.dialogsItems}>\r\n                    {dialogs}\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    <div>{messages}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect  = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}\r\n","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;"],"sourceRoot":""}